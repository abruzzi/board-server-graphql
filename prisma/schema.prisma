// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  comments  Comment[]
  boards    Board[]
  favorites Board[]   @relation("Favorites")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Board {
  id          String   @id @default(uuid())
  name        String
  userId      String
  favoritedBy User[]   @relation("Favorites")
  columns     Column[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model Column {
  id       String @id @default(uuid())
  name     String
  position Int
  boardId  String
  board    Board  @relation(fields: [boardId], references: [id])
  cards    Card[]
}

model Card {
  id          String    @id @default(uuid())
  title       String
  description String
  imageUrl    String? // Optional field
  comments    Comment[]
  tags        CardTag[]

  position  Int
  columnId  String
  column    Column   @relation(fields: [columnId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  deleted   Boolean   @default(false)
  deletedAt DateTime?
}

model Tag {
  id    String    @id @default(uuid())
  name  String    @unique
  cards CardTag[]
}

model CardTag {
  cardId String
  card   Card   @relation(fields: [cardId], references: [id])
  tagId  String
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([cardId, tagId])
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  cardId    String
  card      Card     @relation(fields: [cardId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
